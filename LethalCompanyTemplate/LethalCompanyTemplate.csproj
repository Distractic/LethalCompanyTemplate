<Project Sdk="Microsoft.NET.Sdk">

    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <!-- Copy the plugin to the game's plugin directory -->
        <Exec Command='move "$(TargetDir)$(TargetFileName)" "$(PluginGameDir)"'/>
        <!-- Kill every instance of the game, ignore errors if none are running -->
        <Exec Condition="'$(StartWhenBuilt)'=='true'" Command='taskkill /F /IM "$(GameExe)" /T || exit 0'/>
        <!-- Start new instances of the game as many times as specified in NumberOfClients -->
        <!-- The ping command is used to apply a delay between each instance, otherwise only one BepInEx debug terminal would be opened -->
        <!-- Use ping command is a workaround because Windows doesn't have a sleep command -->
        <Exec Condition="'$(StartWhenBuilt)'=='true'" Command='for /L %%i in (1,1,$(NumberOfClients)) do (start "" "$(GameExePath)" &amp; if %%i lss $(NumberOfClients) (ping 127.0.0.1 -n $(PingDelay) > nul))'/>
    </Target>

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <AssemblyName>LethalCompanyTemplate</AssemblyName>
        <Description>A template for Lethal Company</Description>
        <Version>1.0.0</Version>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>

        <!-- Path of the game directory, should contain Lethal Company.exe -->
        <!-- PROGRA~1 is the short name of Program Files -->
        <!-- PROGRA~2 is the short name of Program Files (x86) -->
        <GameDir>C:\PROGRA~2\Steam\steamapps\common\Lethal Company\</GameDir>
        <!-- Path of the game's plugin directory where the built plugin will be copied to -->
        <PluginGameDir>$(GameDir)BepInEx\plugins\</PluginGameDir>
        <!-- Path of the game's managed directory where the game's dlls are located -->
        <AssemblyGameDir>$(GameDir)Lethal Company_Data\Managed\</AssemblyGameDir>
        <!-- Name of the game executable -->
        <GameExe>Lethal Company.exe</GameExe>
        <!-- Entire path of the game executable -->
        <GameExePath>$(GameDir)$(GameExe)</GameExePath>
        <!-- Number of instances of the game to start to test the plugin -->
        <NumberOfClients>1</NumberOfClients>
        <!-- Delay between each start of the game in seconds -->
        <DelayBetweenClientsInSeconds>5</DelayBetweenClientsInSeconds>
        <!-- To apply the correct delay between each instance, we need to add 1 to the delay because the first "echo" sent by the ping command is instant -->
        <PingDelay>$([MSBuild]::Add($(DelayBetweenClientsInSeconds), 1))</PingDelay>
        <!-- True to start the game when the plugin is built, false to only copy the plugin to the game's plugin directory -->
        <StartWhenBuilt>true</StartWhenBuilt>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all"/>
        <PackageReference Include="BepInEx.Core" Version="5.*"/>
        <PackageReference Include="BepInEx.PluginInfoProps" Version="1.*"/>
        <PackageReference Include="UnityEngine.Modules" Version="2022.3.9" IncludeAssets="compile"/>
    </ItemGroup>

    <ItemGroup Condition="'$(TargetFramework.TrimEnd(`0123456789`))' == 'net'">
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all"/>
    </ItemGroup>

    <ItemGroup Label="Game decompilation">
        <Reference Include="Assembly-CSharp" HintPath="$(AssemblyGameDir)Assembly-CSharp.dll" Publicize="true"/>
        <Reference Include="Unity.Netcode.Runtime" HintPath="$(AssemblyGameDir)Unity.Netcode.Runtime.dll" Publicize="true"/>
    </ItemGroup>

    <ItemGroup>
        <NetcodePatch Include="$(TargetPath)"/>
    </ItemGroup>
</Project>
